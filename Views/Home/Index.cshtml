@{
    ViewBag.Title = "Tous les retards";
}
<link href="~/Content/retard.css" rel="stylesheet" />
<h1>Drater</h1>


<div class="row">
    <div class="col s12">
        <div class="row">
            <div class="input-field col s12">
                <input type="text" id="autocomplete-input" class="autocomplete">
                <label for="autocomplete-input">Autocomplete</label>
            </div>
        </div>
    </div>
</div>

<div id="vue__app" class="card__container">
    
    <div v-if="!loading" v-for="retard in retards" class="card__retard">
        <div class="card__header">
            <img :src="retard.file" alt="User profile" />
            <h3>{{retard.titre}}</h3>
            <span v-if="!retard.loading"  class="text-darken-3 vote__value">{{retard.votes}}</span>
            <div v-if="retard.loading" class="spinner-layer spinner-green">
                <div class="circle-clipper left">
                    <div class="circle"></div>
                </div><div class="gap-patch">
                    <div class="circle"></div>
                </div><div class="circle-clipper right">
                    <div class="circle"></div>
                </div>
            </div>


        </div>

        <p>
            {{retard.description}}

        </p>
        <div>
            <span v-on:click="changeVote(retard,'up')" href="#"><i v-bind:class="{ 'white-text ToggleVoteUp': retard.currentUserVote ===1}" class="material-icons green-text text-darken-2">keyboard_arrow_up</i></span>
            <span v-on:click="changeVote(retard,'down')"><i v-bind:class="{ 'ToogleVoteDown': retard.currentUserVote === -1}" class="material-icons red-text text-darken-2">keyboard_arrow_down</i></span>
        </div>
    </div>

    <div v-if="loading" class="wrapper">
        <div class="toiletroll">
            <div class="roll"></div>
            <div class="papers">
                <div class="paper">Loading</div>
                <div class="paper">Wait</div>
                <div class="paper">Please</div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>
<!-- development version, includes helpful console warnings -->
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script>

    var app = new Vue({
        el: '#vue__app',
        data: {
            connectedUser:@User.Identity.Name,
            retards: [],
            loading: false,
        },
        mounted() {
            console.log("Connected: ",this.connectedUser)
            this.loading = true
            axios.get('Api/Retards')
                .then(response => {
                    // handle success
                    console.log(response.data);
                    this.retards = response.data.map(retard => {
                        return Object.assign({}, retard, {loading:false})
                    });
                    console.log("this.retards: ", this.retards)
                    this.loading = false
                })
        },
        methods: {
            changeVote(tempRetard, method) {

                if (method === "up") {
                    if (tempRetard.currentUserVote === 1) {
                        console.log("remove")
                        this.removeVote(tempRetard)

                    } else if (tempRetard.currentUserVote === -1) {
                        console.log("upp")
                        this.upVote(tempRetard)
                    } else if (tempRetard.currentUserVote === 0) {
                        console.log("upp")
                        this.upVote(tempRetard)
                    }
                    
                } else if (method === "down") {
                    if (tempRetard.currentUserVote === -1) {
                        console.log("remove")
                        this.removeVote(tempRetard)

                    } else if (tempRetard.currentUserVote === 1) {
                        console.log("down")
                        this.downVote(tempRetard)
                    } else if (tempRetard.currentUserVote === 0) {
                        console.log("upp")
                        this.downVote(tempRetard)
                    }
                    
                }
            },
            upVote(tempRetard) {
                this.retards.find(retard => retard.id === tempRetard.id).loading === true;
                axios.post('/Api/Vote/upVote', {
                    idRetard:tempRetard.id,
                    idEleve: 2,
                  })
                    .then(response => {
                        this.retards.find(retard => retard.id === tempRetard.id).votes = response.data;
                        this.retards.find(retard => retard.id === tempRetard.id).currentUserVote = 1;
                  })
            },
            downVote(tempRetard) {
                this.retards.find(retard => retard.id === tempRetard.id).loading === true;
                axios.post('/Api/Vote/downVote', {
                    idRetard:tempRetard.id,
                    idEleve: 2,
                  })
                    .then(response => {
                        this.retards.find(retard => retard.id === tempRetard.id).votes = response.data;
                        this.retards.find(retard => retard.id === tempRetard.id).currentUserVote = -1;
                  })
            },
            removeVote(tempRetard) {
                axios.post('/Api/Vote/delete', {
                    idRetard :tempRetard.id,
                  })
                    .then(response => {
                        this.retards.find(retard => retard.id === tempRetard.id).votes = response.data;
                        this.retards.find(retard => retard.id === tempRetard.id).currentUserVote = 0;
                  }).catch(function (error) {
                    // handle error
                    console.log(error);
  })
            }
        }
    })

    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.autocomplete');
        var instances = M.Autocomplete.init(elems);
    });
</script>


@model DraterNew.ViewModel.CreateRetardsVM


@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Retard</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Retard.titre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Retard.titre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Retard.titre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Retard.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Retard.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Retard.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-field col s12">
            @Html.DropDownList("Retards_Tags", null, htmlAttributes: new { @class = "form-control" })
            @Html.LabelFor(tags => tags.Tags.Libelle, "Retards_Tags", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Tags.Libelle, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10" style="display: none">
            @Html.EditorFor(model => model.Retard.id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Retard.id, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input asp-for="FileUpload.FormFile" type="file" name="fileEnvoie">
            <span asp-validation-for="FileUpload.FormFile"></span>
        </div>

        <div class="input-field col s12">
            @Html.DropDownList("Eleve", null, htmlAttributes: new { @class = "form-control" })
            @Html.LabelFor(tags => tags.Eleve.pseudo, "Eleve", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Eleve.pseudo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>

      document.addEventListener('DOMContentLoaded', function() {
        var elems = document.querySelectorAll('select');
        var instances = M.FormSelect.init(elems);
  });
</script>

